name: Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  lint_test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Get pnpm Version'
        id: pnpm-version
        run: |
          PNPM_VERSION=$(cat package.json | jq --raw-output '.packageManager' | awk -F'@' '{print $2}')
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_OUTPUT

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: 'lts/*'

      - name: Install dependencies
        run: pnpm install

      - name: Store Playwright Version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm playwright --version | sed 's/Version //')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
        working-directory: packages/starlight-package-managers

      - name: Setup Playwright cache
        id: cache-playwright
        uses: actions/cache@v3
        with:
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}
          path: ~/.cache/ms-playwright

      - name: Generates docs TypeScript types
        run: pnpm astro sync
        working-directory: docs

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test
        working-directory: packages/starlight-package-managers
